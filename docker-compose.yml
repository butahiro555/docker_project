services:
  web:
    container_name: nginx  # Nginxコンテナの名前
    build:
      context: .  # ビルドコンテキスト
      dockerfile: ./docker/nginx/Dockerfile  # 使用するDockerfile
    ports:
      - "80:80"  # ホストとコンテナのポートマッピング
    volumes:
      - ./src:/src  # ソースコードのマウント
      - ./docker/nginx/logs:/var/log/nginx/logs  # ホスト側のログディレクトリをマウント
    depends_on:
      - app  # このサービスが依存するサービス
    # Nginxに関連する追加の設定や最適化が必要な場合があります。

  app:
    container_name: php  # PHPコンテナの名前
    build:
      context: .  # ビルドコンテキスト
      dockerfile: ./docker/php/Dockerfile  # 使用するDockerfile
    depends_on:
      - db  # このサービスが依存するサービス
    volumes:
      - ./src:/var/www/html  # ソースコードのマウント
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini  # PHP設定ファイルのマウント
    # PHPに関連する設定や最適化が必要な場合があります。

  db:
    container_name: mysql  # MySQLコンテナの名前
    image: mysql:8.0.38  # 使用するMySQLイメージ
    volumes:
      - ./docker/mysql:/var/lib/mysql  # データベースデータのマウント
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}  # 環境変数の設定
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"  # ホストとコンテナのポートマッピング
    restart: always  # コンテナの再起動ポリシー
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host=localhost", "--user=root", "--password=${MYSQL_ROOT_PASSWORD}"]  # ヘルスチェックコマンド
      interval: 60s  # チェックの間隔
      timeout: 5s  # タイムアウト
      retries: 3  # リトライ回数
      start_period: 30s  # 起動後の猶予時間
    # MySQLに関連する設定や最適化が必要な場合があります。

  redis:
    image: redis:alpine  # 使用するRedisイメージ
    container_name: redis  # Redisコンテナの名前
    ports:
      - "6379:6379"  # ホストとコンテナのポートマッピング
    # Redisに関連する設定や最適化が必要な場合があります。
